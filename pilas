pilass.h

#pragma once

const int MAX= 7;
class pilass
{
private:
	int pilas[MAX], tope;
public:
	pilass(void);
	~pilass(void);
	void push(int dato);
	int  pop();
	bool pila_vacio();

    bool pila_lleno();
	void mostrarpila();
	void topepila();
};

pilass.cpp
#include "StdAfx.h"
#include "pilass.h"
#include <iostream>

using namespace std;

pilass::pilass(void)
{
	tope=-1;
}


pilass::~pilass(void)
{
}

 void pilass::push(int dato)
{
		tope++;
		pilas[tope]=dato;	
}

	int pilass::pop()
{
	int dato;
		dato=pilas[tope];

		tope--;
	
		return(dato);
}

bool pilass::pila_vacio()
{
	if (tope==-1)
	{
		return true;
	}
	else 
		return false;
}
bool pilass::pila_lleno()
{
	if (tope==MAX-1)
	{
		return true; 
	}
	else 
	return false;
}

void pilass::mostrarpila()
{
	int i=0;
	for(i=0;i<=tope;i++)
	{
		cout<<" |   "<<pilas[i]<<"  |  "<<endl;
	}
}
	
void pilass::topepila()
	{
		cout<<pilas[tope]<<endl;
		cout<<"\n";
	}

pilas.cpp
#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include "pilass.h"

using namespace std;
void main()

{
	pilass pila1,pila2;
	int x,op,tope;	
	


	do{
	cout<<"        --------           MENU        --------"<<endl;
	cout<<"           1° Ingresar dato                    "<<endl;
	cout<<"           2° Eliminar dato                    "<<endl;
	cout<<"           3° Mostrar pila                     "<<endl;
	cout<<"           4° Mostrar elemento tope            "<<endl;
	cout<<"           5° SALIR                            "<<endl;
	cin>>op;
	switch (op)
	{
	  case 1:
		  {
			  if(pila1.pila_lleno() == false)
			  {
			
					cout<<"Ingrese un dato = "<<endl;
				    cin>>x;
                    pila1.push(x);
			  } else 
			  {
				  cout<<"Pila llena";
			  
			  }

				}
				
				break;
	  case 2:
		  
		  {
		     
				if(pila1.pila_vacio() == false)
				{
					pila1.pop();
					
				} else
				{
					cout<<"pila vacia";

				}
				 
		  }

				break;
	  case 3:
                  pila1.mostrarpila();
				  break;
	  case 4 :
		  pila1.topepila();
		  break;
	  case 5:
		  cout<<"salir";
		  break;
	  default:
		  cout<<"error";
		  break;
	}
	}while(op!=5);
	getch();

}
